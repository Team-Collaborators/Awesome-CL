[
    {
        "title": "WorkScheduleManagement",
        "path": "/Backend/Controllers/WorkScheduleManagement",
        "description": "These controllers handle the work schedule functionality, including setting work schedules, checking availability, and calculating available time slots.",
        "controllers": [
            {
                "title": "Set Work Schedule",
                "description": "Sets the work schedule for a client, creating or updating it in the database.",
                "code": "const WorkSchedule = require('../../models/WorkSchedule');\n\nconst setWorkSchedule = async (req, res, next) => {\n  const { clientId, days, startTime, endTime } = req.body;\n  try {\n    let workSchedule = await WorkSchedule.findOne({ clientId });\n\n    if (!workSchedule) {\n      workSchedule = new WorkSchedule({\n        clientId,\n        days,\n        startTime,\n        endTime,\n      });\n      await workSchedule.save();\n      return res.status(201).json({ message: 'Work schedule created successfully', workSchedule });\n    }\n    workSchedule.days = days;\n    workSchedule.startTime = startTime;\n    workSchedule.endTime = endTime;\n    await workSchedule.save();\n    res.status(200).json({ message: 'Work schedule updated successfully', workSchedule });\n  } catch (error) {\n    res.status(500).json({ message: 'Error setting work schedule', error });\n  }\n};\n\nmodule.exports = { setWorkSchedule };",
                "language": "javascript"
            },
            {
                "title": "Check Work Schedule Availability",
                "description": "Checks the availability of a client's work schedule and calculates available time slots based on the requested hours.",
                "code": "const WorkSchedule = require('../../models/WorkSchedule');\n\nconst checkAvailability = async (req, res) => {\n  const { hours } = req.body;\n  try {\n    const workSchedule = await WorkSchedule.findOne({ clientId: 'client-id' });\n    if (!workSchedule) {\n      return res.status(404).json({ message: 'Work schedule not found' });\n    }\n    const availableSlots = calculateAvailableSlots(workSchedule, hours);\n    res.status(200).json({ slots: availableSlots });\n  } catch (error) {\n    res.status(500).json({ message: 'Error checking availability', error });\n  }\n};\n\nconst calculateAvailableSlots = (workSchedule, requiredHours) => {\n  const availableSlots = [];\n  const startHour = parseInt(workSchedule.startTime.split(':')[0]);\n  const endHour = parseInt(workSchedule.endTime.split(':')[0]);\n  for (let day of workSchedule.days) {\n    let start = startHour;\n    while (start + requiredHours <= endHour) {\n      availableSlots.push({\n        date: day,\n        time: `${start}:00 - ${start + requiredHours}:00`,\n        duration: requiredHours\n      });\n      start += requiredHours;\n    }\n  }\n  return availableSlots;\n};\n\nmodule.exports = { checkAvailability };",
                "language": "javascript"
            }
        ]
    }
]