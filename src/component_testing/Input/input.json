[
  {
    "title": "input",
    "path": "/frontend/components/input",
    "description": "A customizable form element with adjustable label positioning (above or to the left), size, color, and border styles.",
    "installation": [
      {
        "name": "CLI",
        "command": "cli-command-to-install",
        "path": "/icons/cube-solid.svg"
      },
      {
        "name": "npm",
        "command": "npm install your-library",
        "path": "/icons/npm-brands-solid.svg"
      },
      {
        "name": "yarn",
        "command": "yarn add your-library",
        "path": "/icons/yarn-brands-solid.svg"
      },
      {
        "name": "pnpm",
        "command": "pnpm add your-library",
        "path": "/icons/cubes-solid.svg"
      },
      {
        "name": "bun",
        "command": "bun add your-library",
        "path": "/icons/lemon-regular.svg"
      }
    ],
    "import": {
      "code": "import { Input } from 'AwesomeCL';",
      "description": "This code shows how to import the input component from the library."
    },
    "examples": [
      {
        "title": "Default",
        "components": [
          {
            "type": "Input",
            "props": {
              "size": "sm"
            },
            "children": ""
          }
        ],
        "code": "import { Input } from 'AwesomeCL';\n\nfunction App() {\n  return (\n    <Input />\n );\n}"
      },
      {
        "title": "Sizes",
        "components": [
          {
            "type": "Input",
            "props": {
              "size": "sm",
              "placeholder": "Email"
            },
            "children": ""
          },
          {
            "type": "Input",
            "props": {
              "size": "md",
              "placeholder": "Email"
            },
            "children": "Input"
          },
          {
            "type": "Input",
            "props": {
              "size": "lg",
              "placeholder": "Email"
            },
            "children": ""
          }
        ],
        "code": "import { Input } from 'AwesomeCL';\n\nfunction App() {\n  return (\n    <>\n      <Input size=\"sm\" />\n      <Input size=\"md\"/>\n      <Input size=\"lg\" />\n    </>\n  );\n}"
      },
      {
        "title": "Radius",
        "components": [
          {
            "type": "Input",
            "props": {
              "radius": "none",
              "placeholder": "Email"
            },
            "children": ""
          },
          {
            "type": "Input",
            "props": {
              "radius": "sm",
              "placeholder": "Email"
            },
            "children": ""
          },
          {
            "type": "Input",
            "props": {
              "radius": "md",
              "placeholder": "Email"
            },
            "children": ""
          },
          {
            "type": "Input",
            "props": {
              "radius": "lg",
              "placeholder": "Email"
            },
            "children": ""
          },
          {
            "type": "Input",
            "props": {
              "radius": "full",
              "placeholder": "Email"
            },
            "children": ""
          }
        ],
        "code": "import { Input } from 'AwesomeCL';\n\nfunction App() {\n  return (\n    <>\n      <Input radius=\"none\" placeholder=\"Email\" />\n      <Input radius=\"sm\"  placeholder=\"Email\" />\n      <Input radius=\"md\" placeholder=\"Email\" />\n      <Input radius=\"lg\" placeholder=\"Email\" />\n      <Input radius=\"full\" placeholder=\"Email\" />\n    </>\n  );\n}"
      },
      {
        "title": "Colors",
        "components": [
          {
            "type": "Input",
            "props": {
              "color": "default",
              "placeholder": "Email"
            },
            "children": ""
          },
          {
            "type": "Input",
            "props": {
              "color": "primary",
              "placeholder": "Email"
            },
            "children": ""
          },
          {
            "type": "Input",
            "props": {
              "color": "secondary",
              "placeholder": "Email"
            },
            "children": ""
          },
          {
            "type": "Input",
            "props": {
              "color": "success",
              "placeholder": "Email"
            },
            "children": ""
          },
          {
            "type": "Input",
            "props": {
              "color": "warning",
              "placeholder": "Email"
            },
            "children": ""
          },
          {
            "type": "Input",
            "props": {
              "color": "danger",
              "placeholder": "Email"
            },
            "children": ""
          }
        ],
        "code": "import { Input } from 'AwesomeCL';\n\nfunction App() {\n  return (\n    <>\n      <Input color=\"default\" placeholder= \"Email\" />\n      <Input color=\"primary\" placeholder= \"Email\" />\n      <Input color=\"secondary\" placeholder= \"Email\" />\n      <Input color=\"success\" placeholder= \"Email\" />\n      <Input color=\"warning\" placeholder= \"Email\" />\n      <Input color=\"danger\" placeholder= \"Email\" />\n    </>\n  );\n}"
      },
      {
        "title": "Borders",
        "components": [
          {
            "type": "Input",
            "props": {
              "border": "none",
              "placeholder": "Email"
            },
            "children": ""
          },
          {
            "type": "Input",
            "props": {
              "border": "default",
              "placeholder": "Email"
            },
            "children": ""
          },
          {
            "type": "Input",
            "props": {
              "border": "bottom",
              "placeholder": "Email"
            },
            "children": ""
          }
        ],
        "code": "import { Input } from 'AwesomeCL';\n\nfunction App() {\n  return (\n    <>\n      <Input border=\"none\" placeholder= \"Email\" />\n      <Input border=\"default\" placeholder= \"Email\" />\n      <Input border=\"bottom\" placeholder= \"Email\" />\n    </>\n  );\n}"
      },
      {
        "title": "Label Placements",
        "components": [
          {
            "type": "Input",
            "props": {
              "label": "Email",
              "labelPlacement": "outside"
            },
            "children": ""
          },
          {
            "type": "Input",
            "props": {
              "label": "Email",
              "labelPlacement": "outside-left"
            },
            "children": ""
          }
        ],
        "code": "import { Input } from 'AwesomeCL';\n\nfunction App() {\n  return (\n    <>\n      <Input label=\"Email\" labelPlacement= \"outside\" />\n      <Input label=\"Email\" labelPlacement= \"outside-left\" />\n    </>\n  );\n}"
      }
    ],
    "propsTable": {
      "title": "Input Props",
      "description": "List of all properties supported by the Input component.",
      "headers": ["Prop Name", "Type", "Description", "Default Value"],
      "rows": [
        {
          "propName": "aria",
          "type": "string",
          "description": "Aria label for accessibility. Provides additional context for screen readers.",
          "defaultValue": "'input'"
        },
        {
          "propName": "type",
          "type": "string",
          "description": "Changes the input type, all common HTML input types are valid.",
          "defaultValue": "'text'"
        },
        {
          "propName": "required",
          "type": "Boolean",
          "description": "Specifies whether an input field must be filled out before form submission.",
          "defaultValue": "'text'"
        },
        {
          "propName": "color",
          "type": "string",
          "description": "Defines the color of the button. Options are: 'primary', 'secondary', 'success', 'warning', 'danger'.",
          "defaultValue": "'default'"
        },
        {
          "propName": "style",
          "type": "object",
          "description": "Inline styles to be applied to the button.",
          "defaultValue": "undefined"
        },
        {
          "propName": "size",
          "type": "string",
          "description": "Defines the size of the button. Options are: 'sm', 'md', 'lg'.",
          "defaultValue": "'sm'"
        },
        {
          "propName": "radius",
          "type": "string",
          "description": "Defines the border-radius of the button. Options are: 'none', 'sm', 'md', 'lg', 'full'.",
          "defaultValue": "'md'"
        },
        {
          "propName": "border",
          "type": "string",
          "description": "Defines the border width of the button. Options are: 'none', 'default', 'bottom'.",
          "defaultValue": "'default'"
        },
        {
          "propName": "label",
          "type": "string",
          "description": "Adds a label to the input field. If left blank there is no label. Also determines 'name'-tag.",
          "defaultValue": ""
        },
        {
          "propName": "labelPlacement",
          "type": "string",
          "description": "Determines the position of the label. Options are: 'outside' (places label on top), 'outside-left'.",
          "defaultValue": "'outside'"
        },
        {
          "propName": "className",
          "type": "string",
          "description": "Additional CSS class names to apply to the button.",
          "defaultValue": "undefined"
        },
        {
          "propName": "value",
          "type": "string",
          "description": "Changes the value of the input tag for different operations.",
          "defaultValue": ""
        }
      ]
    },
    "eventsTable": {
      "title": "Events",
      "description": "List of all events emitted by the Input component.",
      "headers": ["Event Name", "Description"],
      "rows": [
        {
          "propName": "onValueChange",
          "type": "Triggered when the value changes."
        }
      ]
    },
    "accessibility": {
      "title": "Accessibility",
      "description": "Accessibility considerations for the Input component.",
      "ariaRoles": [
        {
          "propName": "Input",
          "description": "The Input component is rendered with the input role by default."
        }
      ]
    }
  }
]
